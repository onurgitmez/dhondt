% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_election.R
\name{simulate_election}
\alias{simulate_election}
\title{Simulate an Election Using the D'Hondt Method}
\usage{
simulate_election(
  df,
  district_col,
  seats_col,
  parties,
  threshold = 0,
  assign_to_env = FALSE,
  env_var_name = "df_with_seats"
)
}
\arguments{
\item{df}{Dataframe containing the election data. It must have a column for each party,
with the number of votes that party received in each district. It also must have a column
for district names and a column for the number of seats in each district.}

\item{district_col}{The name of the column in df that contains the district names.}

\item{seats_col}{The name of the column in df that contains the number of seats in each district.}

\item{parties}{A vector of strings, each one the name of a column in df that contains the votes for a party.}

\item{threshold}{The minimum vote share a party needs to be eligible for seats. Default is 0.}

\item{assign_to_env}{Logical, whether to assign the resulting dataframe to a variable in the global environment. Default is FALSE.}

\item{env_var_name}{The name of the variable in the global environment to which the resulting dataframe will be assigned, if assign_to_env is TRUE.}
}
\value{
A list where the first item is a named vector with the total seats for each party, and the second item is the dataframe
with the number of seats each party won in each district (including a total row), optionally assigned to a variable in the global environment.
}
\description{
This function simulates an election using the D'Hondt method. Given a dataframe
containing election data, the names of the columns containing district names,
number of seats in each district, the votes for each party, and a threshold,
it computes the number of seats each party won in the election. The resulting dataframe
can optionally be assigned to a variable in the global environment.
}
\examples{
\dontrun{
# Assuming 'data' is your dataframe, 'district' is your district column,
# 'seats' is your seats column, and 'party1', 'party2' are your party columns.
# The argument threshold = 0.1 represents the national threshold.
# The resulting dataframe will be assigned to the variable 'election_results' in the global environment.
simulate_election(data, "district", "seats", c("party1", "party2"), threshold = 0.1, assign_to_env = TRUE, env_var_name = "election_results")
}
}
