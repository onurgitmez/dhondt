% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_election.R
\name{simulate_election}
\alias{simulate_election}
\title{Simulate an Election Using the D'Hondt Method}
\usage{
simulate_election(df, district_col, seats_col, parties, threshold = 0)
}
\arguments{
\item{df}{Dataframe containing the election data. It must have a column for each party,
with the number of votes that party received in each district. It also must have a column
for district names and a column for the number of seats in each district.}

\item{district_col}{The name of the column in df that contains the district names}

\item{seats_col}{The name of the column in df that contains the number of seats in each district}

\item{parties}{A vector of strings, each one the name of a column in df that contains the votes for a party}

\item{threshold}{The minimum vote share a party needs to be eligible for seats. Default is 0.}
}
\value{
A list where each item is the name of a party and its corresponding number of seats
}
\description{
This function simulates an election using the D'Hondt method. Given a dataframe
containing election data, the names of the columns containing district names,
number of seats in each district, the votes for each party, and a threshold,
it computes the number of seats each party won in the election.
}
\examples{
\dontrun{
# Assuming 'data' is your dataframe, 'district' is your district column,
# 'seats' is your seats column, and 'party1', 'party2' are your party columns
# The last argument 0.1 represents the national threshold.
simulate_election(data, "district", "seats", c("party1", "party2"), 0.1)
}
}
